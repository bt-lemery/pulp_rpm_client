{"swagger": "2.0", "info": {"title": "Pulp 3 API", "logo": {"url": "https://pulp.plan.io/attachments/download/517478/pulp_logo_word_rectangle.svg"}, "version": "v3"}, "host": "localhost:24817", "schemes": ["http"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/pulp/api/v3/artifacts/": {"get": {"operationId": "list", "summary": "List artifacts", "description": "", "parameters": [{"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "md5", "in": "query", "description": "Filter results where md5 matches value", "required": false, "type": "string"}, {"name": "sha1", "in": "query", "description": "Filter results where sha1 matches value", "required": false, "type": "string"}, {"name": "sha224", "in": "query", "description": "Filter results where sha224 matches value", "required": false, "type": "string"}, {"name": "sha256", "in": "query", "description": "Filter results where sha256 matches value", "required": false, "type": "string"}, {"name": "sha384", "in": "query", "description": "Filter results where sha384 matches value", "required": false, "type": "string"}, {"name": "sha512", "in": "query", "description": "Filter results where sha512 matches value", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Artifact"}}}}}}, "tags": ["artifacts"]}, "post": {"operationId": "create", "summary": "Create an artifact", "description": "", "parameters": [{"name": "file", "in": "formData", "description": "The stored file.", "required": true, "type": "file"}, {"name": "size", "in": "formData", "description": "The size of the file in bytes.", "required": false, "type": "integer"}, {"name": "md5", "in": "formData", "description": "The MD5 checksum of the file if available.", "required": false, "type": "string", "minLength": 1, "x-nullable": true}, {"name": "sha1", "in": "formData", "description": "The SHA-1 checksum of the file if available.", "required": false, "type": "string", "minLength": 1, "x-nullable": true}, {"name": "sha224", "in": "formData", "description": "The SHA-224 checksum of the file if available.", "required": false, "type": "string", "minLength": 1, "x-nullable": true}, {"name": "sha256", "in": "formData", "description": "The SHA-256 checksum of the file if available.", "required": false, "type": "string", "minLength": 1, "x-nullable": true}, {"name": "sha384", "in": "formData", "description": "The SHA-384 checksum of the file if available.", "required": false, "type": "string", "minLength": 1, "x-nullable": true}, {"name": "sha512", "in": "formData", "description": "The SHA-512 checksum of the file if available.", "required": false, "type": "string", "minLength": 1, "x-nullable": true}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Artifact"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["artifacts"]}, "parameters": []}, "{artifact_href}": {"get": {"operationId": "read", "summary": "Inspect an artifact", "description": "", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Artifact"}}}, "tags": ["artifacts"]}, "delete": {"operationId": "delete", "summary": "Delete an artifact", "description": "Remove Artifact only if it is not associated with any Content.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["artifacts"]}, "parameters": [{"name": "artifact_href", "in": "path", "description": "URI of Artifact. e.g.: /pulp/api/v3/artifacts/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/file/files/": {"get": {"operationId": "list", "summary": "List file contents", "description": "\nFileContent represents a single file and its metadata, which can be added and removed from\nrepositories.", "parameters": [{"name": "relative_path", "in": "query", "description": "Filter results where relative_path matches value", "required": false, "type": "string"}, {"name": "digest", "in": "query", "description": "Filter results where digest matches value", "required": false, "type": "string"}, {"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/file.FileContent"}}}}}}, "tags": ["content: files"]}, "post": {"operationId": "create", "summary": "Create a file content", "description": "Trigger an asynchronous task to create content,optionally create new repository version.", "parameters": [{"name": "artifact", "in": "formData", "description": "Artifact file representing the physical content", "required": false, "type": "string", "format": "uri"}, {"name": "relative_path", "in": "formData", "description": "Path where the artifact is located relative to distributions base_path", "required": true, "type": "string", "minLength": 1}, {"name": "file", "in": "formData", "description": "An uploaded file that should be turned into the artifact of the content unit.", "required": false, "type": "file"}, {"name": "repository", "in": "formData", "description": "A URI of a repository the new content unit should be associated with.", "required": false, "type": "string", "format": "uri"}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["content: files"]}, "parameters": []}, "{file_content_href}": {"get": {"operationId": "read", "summary": "Inspect a file content", "description": "\nFileContent represents a single file and its metadata, which can be added and removed from\nrepositories.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/file.FileContent"}}}, "tags": ["content: files"]}, "parameters": [{"name": "file_content_href", "in": "path", "description": "URI of File Content. e.g.: /pulp/api/v3/content/file/files/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/rpm/advisories/": {"get": {"operationId": "list", "summary": "List update records", "description": "Define endpoint name which will appear in the API endpoint for this content type.\nFor example::\n    http://pulp.example.com/pulp/api/v3/content/rpm/advisories/\n\nAlso specify queryset and serializer for UpdateRecord.", "parameters": [{"name": "id", "in": "query", "description": "Filter results where id matches value", "required": false, "type": "string"}, {"name": "id__in", "in": "query", "description": "Filter results where id is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "status", "in": "query", "description": "Filter results where status matches value", "required": false, "type": "string"}, {"name": "status__in", "in": "query", "description": "Filter results where status is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "severity", "in": "query", "description": "Filter results where severity matches value", "required": false, "type": "string"}, {"name": "severity__in", "in": "query", "description": "Filter results where severity is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "type", "in": "query", "description": "Filter results where type matches value", "required": false, "type": "string"}, {"name": "type__in", "in": "query", "description": "Filter results where type is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/rpm.UpdateRecord"}}}}}}, "tags": ["content: advisories"]}, "post": {"operationId": "create", "summary": "Create an update record", "description": "Trigger an asynchronous task to create content,optionally create new repository version.", "parameters": [{"name": "artifact", "in": "formData", "description": "Artifact file representing the physical content", "required": false, "type": "string", "format": "uri"}, {"name": "relative_path", "in": "formData", "description": "Path where the artifact is located relative to distributions base_path", "required": true, "type": "string", "minLength": 1}, {"name": "file", "in": "formData", "description": "An uploaded file that should be turned into the artifact of the content unit.", "required": false, "type": "file"}, {"name": "repository", "in": "formData", "description": "A URI of a repository the new content unit should be associated with.", "required": false, "type": "string", "format": "uri"}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["content: advisories"]}, "parameters": []}, "{update_record_href}": {"get": {"operationId": "read", "summary": "Inspect an update record", "description": "Define endpoint name which will appear in the API endpoint for this content type.\nFor example::\n    http://pulp.example.com/pulp/api/v3/content/rpm/advisories/\n\nAlso specify queryset and serializer for UpdateRecord.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/rpm.UpdateRecord"}}}, "tags": ["content: advisories"]}, "parameters": [{"name": "update_record_href", "in": "path", "description": "URI of Update Record. e.g.: /pulp/api/v3/content/rpm/advisories/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/rpm/distribution_trees/": {"get": {"operationId": "list", "summary": "List distribution trees", "description": "Distribution Tree Viewset.", "parameters": [{"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/rpm.DistributionTree"}}}}}}, "tags": ["content: distribution_trees"]}, "parameters": []}, "{distribution_tree_href}": {"get": {"operationId": "read", "summary": "Inspect a distribution tree", "description": "Distribution Tree Viewset.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/rpm.DistributionTree"}}}, "tags": ["content: distribution_trees"]}, "delete": {"operationId": "delete", "summary": "Delete a distribution tree", "description": "Distribution Tree Viewset.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["content: distribution_trees"]}, "parameters": [{"name": "distribution_tree_href", "in": "path", "description": "URI of Distribution Tree. e.g.: /pulp/api/v3/content/rpm/distribution_trees/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/rpm/modulemd_defaults/": {"get": {"operationId": "list", "summary": "List modulemd defaultss", "description": "ViewSet for Modulemd.", "parameters": [{"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/rpm.ModulemdDefaults"}}}}}}, "tags": ["content: modulemd_defaults"]}, "post": {"operationId": "create", "summary": "Create a modulemd defaults", "description": "Trigger an asynchronous task to create content,optionally create new repository version.", "parameters": [{"name": "artifact", "in": "formData", "description": "Artifact file representing the physical content", "required": false, "type": "string", "format": "uri"}, {"name": "relative_path", "in": "formData", "description": "Path where the artifact is located relative to distributions base_path", "required": true, "type": "string", "minLength": 1}, {"name": "file", "in": "formData", "description": "An uploaded file that should be turned into the artifact of the content unit.", "required": false, "type": "file"}, {"name": "repository", "in": "formData", "description": "A URI of a repository the new content unit should be associated with.", "required": false, "type": "string", "format": "uri"}, {"name": "module", "in": "formData", "description": "Modulemd name.", "required": true, "type": "string", "minLength": 1}, {"name": "stream", "in": "formData", "description": "Modulemd default stream.", "required": true, "type": "string", "minLength": 1}, {"name": "profiles", "in": "formData", "description": "Default profiles for modulemd streams.", "required": true, "type": "string"}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["content: modulemd_defaults"]}, "parameters": []}, "{modulemd_defaults_href}": {"get": {"operationId": "read", "summary": "Inspect a modulemd defaults", "description": "ViewSet for Modulemd.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/rpm.ModulemdDefaults"}}}, "tags": ["content: modulemd_defaults"]}, "parameters": [{"name": "modulemd_defaults_href", "in": "path", "description": "URI of Modulemd Defaults. e.g.: /pulp/api/v3/content/rpm/modulemd_defaults/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/rpm/modulemds/": {"get": {"operationId": "list", "summary": "List modulemds", "description": "ViewSet for Modulemd.", "parameters": [{"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/rpm.Modulemd"}}}}}}, "tags": ["content: modulemds"]}, "post": {"operationId": "create", "summary": "Create a modulemd", "description": "Trigger an asynchronous task to create content,optionally create new repository version.", "parameters": [{"name": "artifact", "in": "formData", "description": "Artifact file representing the physical content", "required": false, "type": "string", "format": "uri"}, {"name": "relative_path", "in": "formData", "description": "Path where the artifact is located relative to distributions base_path", "required": true, "type": "string", "minLength": 1}, {"name": "file", "in": "formData", "description": "An uploaded file that should be turned into the artifact of the content unit.", "required": false, "type": "file"}, {"name": "repository", "in": "formData", "description": "A URI of a repository the new content unit should be associated with.", "required": false, "type": "string", "format": "uri"}, {"name": "name", "in": "formData", "description": "Modulemd name.", "required": true, "type": "string", "minLength": 1}, {"name": "stream", "in": "formData", "description": "Stream name.", "required": true, "type": "string", "minLength": 1}, {"name": "version", "in": "formData", "description": "Modulemd version.", "required": true, "type": "string", "minLength": 1}, {"name": "context", "in": "formData", "description": "Modulemd context.", "required": true, "type": "string", "minLength": 1}, {"name": "arch", "in": "formData", "description": "Modulemd architecture.", "required": true, "type": "string", "minLength": 1}, {"name": "artifacts", "in": "formData", "description": "Modulemd artifacts.", "required": true, "type": "string"}, {"name": "dependencies", "in": "formData", "description": "Modulemd dependencies.", "required": true, "type": "string"}, {"name": "packages", "in": "formData", "description": "Modulemd artifacts' packages.", "required": false, "type": "array", "items": {"type": "string", "x-nullable": true}, "uniqueItems": true}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["content: modulemds"]}, "parameters": []}, "{modulemd_href}": {"get": {"operationId": "read", "summary": "Inspect a modulemd", "description": "ViewSet for Modulemd.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/rpm.Modulemd"}}}, "tags": ["content: modulemds"]}, "parameters": [{"name": "modulemd_href", "in": "path", "description": "URI of Modulemd. e.g.: /pulp/api/v3/content/rpm/modulemds/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/rpm/packagecategories/": {"get": {"operationId": "list", "summary": "List package categorys", "description": "PackageCategory ViewSet.", "parameters": [{"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/rpm.PackageCategory"}}}}}}, "tags": ["content: packagecategories"]}, "parameters": []}, "{package_category_href}": {"get": {"operationId": "read", "summary": "Inspect a package category", "description": "PackageCategory ViewSet.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/rpm.PackageCategory"}}}, "tags": ["content: packagecategories"]}, "delete": {"operationId": "delete", "summary": "Delete a package category", "description": "PackageCategory ViewSet.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["content: packagecategories"]}, "parameters": [{"name": "package_category_href", "in": "path", "description": "URI of Package Category. e.g.: /pulp/api/v3/content/rpm/packagecategories/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/rpm/packageenvironments/": {"get": {"operationId": "list", "summary": "List package environments", "description": "PackageEnvironment ViewSet.", "parameters": [{"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/rpm.PackageEnvironment"}}}}}}, "tags": ["content: packageenvironments"]}, "parameters": []}, "{package_environment_href}": {"get": {"operationId": "read", "summary": "Inspect a package environment", "description": "PackageEnvironment ViewSet.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/rpm.PackageEnvironment"}}}, "tags": ["content: packageenvironments"]}, "delete": {"operationId": "delete", "summary": "Delete a package environment", "description": "PackageEnvironment ViewSet.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["content: packageenvironments"]}, "parameters": [{"name": "package_environment_href", "in": "path", "description": "URI of Package Environment. e.g.: /pulp/api/v3/content/rpm/packageenvironments/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/rpm/packagegroups/": {"get": {"operationId": "list", "summary": "List package groups", "description": "PackageGroup ViewSet.", "parameters": [{"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/rpm.PackageGroup"}}}}}}, "tags": ["content: packagegroups"]}, "parameters": []}, "{package_group_href}": {"get": {"operationId": "read", "summary": "Inspect a package group", "description": "PackageGroup ViewSet.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/rpm.PackageGroup"}}}, "tags": ["content: packagegroups"]}, "delete": {"operationId": "delete", "summary": "Delete a package group", "description": "PackageGroup ViewSet.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["content: packagegroups"]}, "parameters": [{"name": "package_group_href", "in": "path", "description": "URI of Package Group. e.g.: /pulp/api/v3/content/rpm/packagegroups/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/rpm/packagelangpacks/": {"get": {"operationId": "list", "summary": "List package langpackss", "description": "PackageLangpacks ViewSet.", "parameters": [{"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/rpm.PackageLangpacks"}}}}}}, "tags": ["content: packagelangpacks"]}, "parameters": []}, "{package_langpacks_href}": {"get": {"operationId": "read", "summary": "Inspect a package langpacks", "description": "PackageLangpacks ViewSet.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/rpm.PackageLangpacks"}}}, "tags": ["content: packagelangpacks"]}, "delete": {"operationId": "delete", "summary": "Delete a package langpacks", "description": "PackageLangpacks ViewSet.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["content: packagelangpacks"]}, "parameters": [{"name": "package_langpacks_href", "in": "path", "description": "URI of Package Langpacks. e.g.: /pulp/api/v3/content/rpm/packagelangpacks/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/rpm/packages/": {"get": {"operationId": "list", "summary": "List packages", "description": "Define endpoint name which will appear in the API endpoint for this content type.\nFor example::\n    http://pulp.example.com/pulp/api/v3/content/rpm/packages/\n\nAlso specify queryset and serializer for Package.", "parameters": [{"name": "name", "in": "query", "description": "Filter results where name matches value", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "epoch", "in": "query", "description": "Filter results where epoch matches value", "required": false, "type": "string"}, {"name": "epoch__in", "in": "query", "description": "Filter results where epoch is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "version", "in": "query", "description": "Filter results where version matches value", "required": false, "type": "string"}, {"name": "version__in", "in": "query", "description": "Filter results where version is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "release", "in": "query", "description": "Filter results where release matches value", "required": false, "type": "string"}, {"name": "release__in", "in": "query", "description": "Filter results where release is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "arch", "in": "query", "description": "Filter results where arch matches value", "required": false, "type": "string"}, {"name": "arch__in", "in": "query", "description": "Filter results where arch is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "pkgId", "in": "query", "description": "Filter results where pkgId matches value", "required": false, "type": "string"}, {"name": "pkgId__in", "in": "query", "description": "Filter results where pkgId is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "checksum_type", "in": "query", "description": "Filter results where checksum_type matches value", "required": false, "type": "string"}, {"name": "checksum_type__in", "in": "query", "description": "Filter results where checksum_type is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/rpm.Package"}}}}}}, "tags": ["content: packages"]}, "post": {"operationId": "create", "summary": "Create a package", "description": "Trigger an asynchronous task to create content,optionally create new repository version.", "parameters": [{"name": "artifact", "in": "formData", "description": "Artifact file representing the physical content", "required": false, "type": "string", "format": "uri"}, {"name": "relative_path", "in": "formData", "description": "Path where the artifact is located relative to distributions base_path", "required": true, "type": "string", "minLength": 1}, {"name": "file", "in": "formData", "description": "An uploaded file that should be turned into the artifact of the content unit.", "required": false, "type": "file"}, {"name": "repository", "in": "formData", "description": "A URI of a repository the new content unit should be associated with.", "required": false, "type": "string", "format": "uri"}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["content: packages"]}, "parameters": []}, "{package_href}": {"get": {"operationId": "read", "summary": "Inspect a package", "description": "Define endpoint name which will appear in the API endpoint for this content type.\nFor example::\n    http://pulp.example.com/pulp/api/v3/content/rpm/packages/\n\nAlso specify queryset and serializer for Package.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/rpm.Package"}}}, "tags": ["content: packages"]}, "parameters": [{"name": "package_href", "in": "path", "description": "URI of Package. e.g.: /pulp/api/v3/content/rpm/packages/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/rpm/repo_metadata_files/": {"get": {"operationId": "list", "summary": "List repo metadata files", "description": "RepoMetadataFile Viewset.", "parameters": [{"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/rpm.RepoMetadataFile"}}}}}}, "tags": ["content: repo_metadata_files"]}, "parameters": []}, "{repo_metadata_file_href}": {"get": {"operationId": "read", "summary": "Inspect a repo metadata file", "description": "RepoMetadataFile Viewset.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/rpm.RepoMetadataFile"}}}, "tags": ["content: repo_metadata_files"]}, "delete": {"operationId": "delete", "summary": "Delete a repo metadata file", "description": "RepoMetadataFile Viewset.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["content: repo_metadata_files"]}, "parameters": [{"name": "repo_metadata_file_href", "in": "path", "description": "URI of Repo Metadata File. e.g.: /pulp/api/v3/content/rpm/repo_metadata_files/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/distributions/file/file/": {"get": {"operationId": "list", "summary": "List file distributions", "description": "\nFileDistributions host File\nPublications which makes the metadata and the referenced File Content available to HTTP\nclients. Additionally, a FileDistribution with an associated FilePublication can be the target\nurl of a File Remote , allowing\nanother instance of Pulp to sync the content.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "base_path", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "base_path__contains", "in": "query", "description": "Filter results where base_path contains value", "required": false, "type": "string"}, {"name": "base_path__icontains", "in": "query", "description": "Filter results where base_path contains value", "required": false, "type": "string"}, {"name": "base_path__in", "in": "query", "description": "Filter results where base_path is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/file.FileDistribution"}}}}}}, "tags": ["distributions: file"]}, "post": {"operationId": "create", "summary": "Create a file distribution", "description": "Trigger an asynchronous create task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: file"]}, "parameters": []}, "{file_distribution_href}": {"get": {"operationId": "read", "summary": "Inspect a file distribution", "description": "\nFileDistributions host File\nPublications which makes the metadata and the referenced File Content available to HTTP\nclients. Additionally, a FileDistribution with an associated FilePublication can be the target\nurl of a File Remote , allowing\nanother instance of Pulp to sync the content.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/file.FileDistribution"}}}, "tags": ["distributions: file"]}, "put": {"operationId": "update", "summary": "Update a file distribution", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: file"]}, "patch": {"operationId": "partial_update", "summary": "Partially update a file distribution", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: file"]}, "delete": {"operationId": "delete", "summary": "Delete a file distribution", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: file"]}, "parameters": [{"name": "file_distribution_href", "in": "path", "description": "URI of File Distribution. e.g.: /pulp/api/v3/distributions/file/file/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/distributions/rpm/rpm/": {"get": {"operationId": "list", "summary": "List rpm distributions", "description": "ViewSet for RPM Distributions.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "base_path", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "base_path__contains", "in": "query", "description": "Filter results where base_path contains value", "required": false, "type": "string"}, {"name": "base_path__icontains", "in": "query", "description": "Filter results where base_path contains value", "required": false, "type": "string"}, {"name": "base_path__in", "in": "query", "description": "Filter results where base_path is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/rpm.RpmDistribution"}}}}}}, "tags": ["distributions: rpm"]}, "post": {"operationId": "create", "summary": "Create a rpm distribution", "description": "Trigger an asynchronous create task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/rpm.RpmDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: rpm"]}, "parameters": []}, "{rpm_distribution_href}": {"get": {"operationId": "read", "summary": "Inspect a rpm distribution", "description": "ViewSet for RPM Distributions.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/rpm.RpmDistribution"}}}, "tags": ["distributions: rpm"]}, "put": {"operationId": "update", "summary": "Update a rpm distribution", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/rpm.RpmDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: rpm"]}, "patch": {"operationId": "partial_update", "summary": "Partially update a rpm distribution", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/rpm.RpmDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: rpm"]}, "delete": {"operationId": "delete", "summary": "Delete a rpm distribution", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: rpm"]}, "parameters": [{"name": "rpm_distribution_href", "in": "path", "description": "URI of Rpm Distribution. e.g.: /pulp/api/v3/distributions/rpm/rpm/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/file_exporters/file/file/": {"get": {"operationId": "list", "summary": "List file file system exporters", "description": "FileSystemExporters export content from a publication to a path on the file system.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/file.FileFileSystemExporter"}}}}}}, "tags": ["file_exporters: file"]}, "post": {"operationId": "create", "summary": "Create a file file system exporter", "description": "FileSystemExporters export content from a publication to a path on the file system.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileFileSystemExporter"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/file.FileFileSystemExporter"}}}, "tags": ["file_exporters: file"]}, "parameters": []}, "{file_file_system_exporter_href}": {"get": {"operationId": "read", "summary": "Inspect a file file system exporter", "description": "FileSystemExporters export content from a publication to a path on the file system.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/file.FileFileSystemExporter"}}}, "tags": ["file_exporters: file"]}, "put": {"operationId": "update", "summary": "Update a file file system exporter", "description": "FileSystemExporters export content from a publication to a path on the file system.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileFileSystemExporter"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/file.FileFileSystemExporter"}}}, "tags": ["file_exporters: file"]}, "patch": {"operationId": "partial_update", "summary": "Partially update a file file system exporter", "description": "FileSystemExporters export content from a publication to a path on the file system.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileFileSystemExporter"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/file.FileFileSystemExporter"}}}, "tags": ["file_exporters: file"]}, "delete": {"operationId": "delete", "summary": "Delete a file file system exporter", "description": "FileSystemExporters export content from a publication to a path on the file system.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["file_exporters: file"]}, "parameters": [{"name": "file_file_system_exporter_href", "in": "path", "description": "URI of File File System Exporter. e.g.: /pulp/api/v3/file_exporters/file/file/1/", "required": true, "type": "string"}]}, "{file_file_system_exporter_href}export/": {"post": {"operationId": "export", "description": "Trigger an asynchronous task to export a file publication.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PublicationExport"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["file_exporters: file"]}, "parameters": [{"name": "file_file_system_exporter_href", "in": "path", "description": "URI of File File System Exporter. e.g.: /pulp/api/v3/file_exporters/file/file/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/orphans/": {"delete": {"operationId": "delete", "summary": "Delete orphans", "description": "Trigger an asynchronous task that deletes allorphaned content and artifacts.", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["orphans"]}, "parameters": []}, "/pulp/api/v3/publications/file/file/": {"get": {"operationId": "list", "summary": "List file publications", "description": "\nA FilePublication contains metadata about all the File Content in a particular File Repository Version.\nOnce a FilePublication has been created, it can be hosted using the\nFile Distribution API.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/file.FilePublication"}}}}}}, "tags": ["publications: file"]}, "post": {"operationId": "create", "summary": "Create a file publication", "description": "Trigger an asynchronous task to publish file content.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FilePublication"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["publications: file"]}, "parameters": []}, "{file_publication_href}": {"get": {"operationId": "read", "summary": "Inspect a file publication", "description": "\nA FilePublication contains metadata about all the File Content in a particular File Repository Version.\nOnce a FilePublication has been created, it can be hosted using the\nFile Distribution API.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/file.FilePublication"}}}, "tags": ["publications: file"]}, "delete": {"operationId": "delete", "summary": "Delete a file publication", "description": "\nA FilePublication contains metadata about all the File Content in a particular File Repository Version.\nOnce a FilePublication has been created, it can be hosted using the\nFile Distribution API.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["publications: file"]}, "parameters": [{"name": "file_publication_href", "in": "path", "description": "URI of File Publication. e.g.: /pulp/api/v3/publications/file/file/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/publications/rpm/rpm/": {"get": {"operationId": "list", "summary": "List rpm publications", "description": "ViewSet for Rpm Publications.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/rpm.RpmPublication"}}}}}}, "tags": ["publications: rpm"]}, "post": {"operationId": "create", "summary": "Create a rpm publication", "description": "Trigger an asynchronous task to create a new RPM content publication.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/rpm.RpmPublication"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["publications: rpm"]}, "parameters": []}, "{rpm_publication_href}": {"get": {"operationId": "read", "summary": "Inspect a rpm publication", "description": "ViewSet for Rpm Publications.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/rpm.RpmPublication"}}}, "tags": ["publications: rpm"]}, "delete": {"operationId": "delete", "summary": "Delete a rpm publication", "description": "ViewSet for Rpm Publications.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["publications: rpm"]}, "parameters": [{"name": "rpm_publication_href", "in": "path", "description": "URI of Rpm Publication. e.g.: /pulp/api/v3/publications/rpm/rpm/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/remotes/file/file/": {"get": {"operationId": "list", "summary": "List file remotes", "description": "\nFileRemote represents an external source of File\nContent.  The target url of a FileRemote must contain a file manifest, which contains the\nmetadata for all files at the source.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "pulp_last_updated__lt", "in": "query", "description": "Filter results where pulp_last_updated is less than value", "required": false, "type": "string"}, {"name": "pulp_last_updated__lte", "in": "query", "description": "Filter results where pulp_last_updated is less than or equal to value", "required": false, "type": "string"}, {"name": "pulp_last_updated__gt", "in": "query", "description": "Filter results where pulp_last_updated is greater than value", "required": false, "type": "string"}, {"name": "pulp_last_updated__gte", "in": "query", "description": "Filter results where pulp_last_updated is greater than or equal to value", "required": false, "type": "string"}, {"name": "pulp_last_updated__range", "in": "query", "description": "Filter results where pulp_last_updated is between two comma separated values", "required": false, "type": "string"}, {"name": "pulp_last_updated", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/file.FileRemote"}}}}}}, "tags": ["remotes: file"]}, "post": {"operationId": "create", "summary": "Create a file remote", "description": "\nFileRemote represents an external source of File\nContent.  The target url of a FileRemote must contain a file manifest, which contains the\nmetadata for all files at the source.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileRemote"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/file.FileRemote"}}}, "tags": ["remotes: file"]}, "parameters": []}, "{file_remote_href}": {"get": {"operationId": "read", "summary": "Inspect a file remote", "description": "\nFileRemote represents an external source of File\nContent.  The target url of a FileRemote must contain a file manifest, which contains the\nmetadata for all files at the source.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/file.FileRemote"}}}, "tags": ["remotes: file"]}, "put": {"operationId": "update", "summary": "Update a file remote", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: file"]}, "patch": {"operationId": "partial_update", "summary": "Partially update a file remote", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: file"]}, "delete": {"operationId": "delete", "summary": "Delete a file remote", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: file"]}, "parameters": [{"name": "file_remote_href", "in": "path", "description": "URI of File Remote. e.g.: /pulp/api/v3/remotes/file/file/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/remotes/rpm/rpm/": {"get": {"operationId": "list", "summary": "List rpm remotes", "description": "A ViewSet for RpmRemote.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "pulp_last_updated__lt", "in": "query", "description": "Filter results where pulp_last_updated is less than value", "required": false, "type": "string"}, {"name": "pulp_last_updated__lte", "in": "query", "description": "Filter results where pulp_last_updated is less than or equal to value", "required": false, "type": "string"}, {"name": "pulp_last_updated__gt", "in": "query", "description": "Filter results where pulp_last_updated is greater than value", "required": false, "type": "string"}, {"name": "pulp_last_updated__gte", "in": "query", "description": "Filter results where pulp_last_updated is greater than or equal to value", "required": false, "type": "string"}, {"name": "pulp_last_updated__range", "in": "query", "description": "Filter results where pulp_last_updated is between two comma separated values", "required": false, "type": "string"}, {"name": "pulp_last_updated", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/rpm.RpmRemote"}}}}}}, "tags": ["remotes: rpm"]}, "post": {"operationId": "create", "summary": "Create a rpm remote", "description": "A ViewSet for RpmRemote.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/rpm.RpmRemote"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/rpm.RpmRemote"}}}, "tags": ["remotes: rpm"]}, "parameters": []}, "{rpm_remote_href}": {"get": {"operationId": "read", "summary": "Inspect a rpm remote", "description": "A ViewSet for RpmRemote.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/rpm.RpmRemote"}}}, "tags": ["remotes: rpm"]}, "put": {"operationId": "update", "summary": "Update a rpm remote", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/rpm.RpmRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: rpm"]}, "patch": {"operationId": "partial_update", "summary": "Partially update a rpm remote", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/rpm.RpmRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: rpm"]}, "delete": {"operationId": "delete", "summary": "Delete a rpm remote", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: rpm"]}, "parameters": [{"name": "rpm_remote_href", "in": "path", "description": "URI of Rpm Remote. e.g.: /pulp/api/v3/remotes/rpm/rpm/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/repositories/file/file/": {"get": {"operationId": "list", "summary": "List file repositorys", "description": "\nFileRepository represents a single file repository, to which content can be synced, added,\nor removed.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/file.FileRepository"}}}}}}, "tags": ["repositories: file"]}, "post": {"operationId": "create", "summary": "Create a file repository", "description": "\nFileRepository represents a single file repository, to which content can be synced, added,\nor removed.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileRepository"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/file.FileRepository"}}}, "tags": ["repositories: file"]}, "parameters": []}, "{file_repository_href}": {"get": {"operationId": "read", "summary": "Inspect a file repository", "description": "\nFileRepository represents a single file repository, to which content can be synced, added,\nor removed.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/file.FileRepository"}}}, "tags": ["repositories: file"]}, "put": {"operationId": "update", "summary": "Update a file repository", "description": "Trigger an asynchronous task to update a repository.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileRepository"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: file"]}, "patch": {"operationId": "partial_update", "summary": "Partially update a file repository", "description": "\nFileRepository represents a single file repository, to which content can be synced, added,\nor removed.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/file.FileRepository"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/file.FileRepository"}}}, "tags": ["repositories: file"]}, "delete": {"operationId": "delete", "summary": "Delete a file repository", "description": "Trigger an asynchronous task to delete a repository.", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: file"]}, "parameters": [{"name": "file_repository_href", "in": "path", "description": "URI of File Repository. e.g.: /pulp/api/v3/repositories/file/file/1/", "required": true, "type": "string"}]}, "{file_repository_href}modify/": {"post": {"operationId": "modify", "description": "Trigger an asynchronous task to create a new repository version.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositoryAddRemoveContent"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: file"]}, "parameters": [{"name": "file_repository_href", "in": "path", "description": "URI of File Repository. e.g.: /pulp/api/v3/repositories/file/file/1/", "required": true, "type": "string"}]}, "{file_repository_href}sync/": {"post": {"operationId": "sync", "description": "Trigger an asynchronous task to sync file content.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositorySyncURL"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: file"]}, "parameters": [{"name": "file_repository_href", "in": "path", "description": "URI of File Repository. e.g.: /pulp/api/v3/repositories/file/file/1/", "required": true, "type": "string"}]}, "{file_repository_href}versions/": {"get": {"operationId": "list", "summary": "List repository versions", "description": "\nFileRepositoryVersion represents a single file repository version.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "number", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "number__lt", "in": "query", "description": "Filter results where number is less than value", "required": false, "type": "number"}, {"name": "number__lte", "in": "query", "description": "Filter results where number is less than or equal to value", "required": false, "type": "number"}, {"name": "number__gt", "in": "query", "description": "Filter results where number is greater than value", "required": false, "type": "number"}, {"name": "number__gte", "in": "query", "description": "Filter results where number is greater than or equal to value", "required": false, "type": "number"}, {"name": "number__range", "in": "query", "description": "Filter results where number is between two comma separated values", "required": false, "type": "number"}, {"name": "pulp_created__lt", "in": "query", "description": "Filter results where pulp_created is less than value", "required": false, "type": "string"}, {"name": "pulp_created__lte", "in": "query", "description": "Filter results where pulp_created is less than or equal to value", "required": false, "type": "string"}, {"name": "pulp_created__gt", "in": "query", "description": "Filter results where pulp_created is greater than value", "required": false, "type": "string"}, {"name": "pulp_created__gte", "in": "query", "description": "Filter results where pulp_created is greater than or equal to value", "required": false, "type": "string"}, {"name": "pulp_created__range", "in": "query", "description": "Filter results where pulp_created is between two comma separated values", "required": false, "type": "string"}, {"name": "content", "in": "query", "description": "Content Unit referenced by HREF", "required": false, "type": "string"}, {"name": "pulp_created", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/RepositoryVersion"}}}}}}, "tags": ["repositories: file versions"]}, "parameters": [{"name": "file_repository_href", "in": "path", "description": "URI of File Repository. e.g.: /pulp/api/v3/repositories/file/file/1/", "required": true, "type": "string"}]}, "{file_repository_version_href}": {"get": {"operationId": "read", "summary": "Inspect a repository version", "description": "\nFileRepositoryVersion represents a single file repository version.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RepositoryVersion"}}}, "tags": ["repositories: file versions"]}, "delete": {"operationId": "delete", "summary": "Delete a repository version", "description": "Trigger an asynchronous task to delete a repositroy version.", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: file versions"]}, "parameters": [{"name": "file_repository_version_href", "in": "path", "description": "URI of Repository Version. e.g.: /pulp/api/v3/repositories/file/file/1/versions/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/repositories/rpm/rpm/": {"get": {"operationId": "list", "summary": "List rpm repositorys", "description": "A ViewSet for RpmRepository.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/rpm.RpmRepository"}}}}}}, "tags": ["repositories: rpm"]}, "post": {"operationId": "create", "summary": "Create a rpm repository", "description": "A ViewSet for RpmRepository.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/rpm.RpmRepository"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/rpm.RpmRepository"}}}, "tags": ["repositories: rpm"]}, "parameters": []}, "{rpm_repository_href}": {"get": {"operationId": "read", "summary": "Inspect a rpm repository", "description": "A ViewSet for RpmRepository.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/rpm.RpmRepository"}}}, "tags": ["repositories: rpm"]}, "put": {"operationId": "update", "summary": "Update a rpm repository", "description": "Trigger an asynchronous task to update a repository.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/rpm.RpmRepository"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: rpm"]}, "patch": {"operationId": "partial_update", "summary": "Partially update a rpm repository", "description": "A ViewSet for RpmRepository.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/rpm.RpmRepository"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/rpm.RpmRepository"}}}, "tags": ["repositories: rpm"]}, "delete": {"operationId": "delete", "summary": "Delete a rpm repository", "description": "Trigger an asynchronous task to delete a repository.", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: rpm"]}, "parameters": [{"name": "rpm_repository_href", "in": "path", "description": "URI of Rpm Repository. e.g.: /pulp/api/v3/repositories/rpm/rpm/1/", "required": true, "type": "string"}]}, "{rpm_repository_href}modify/": {"post": {"operationId": "modify", "description": "Trigger an asynchronous task to create a new repository version.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositoryAddRemoveContent"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: rpm"]}, "parameters": [{"name": "rpm_repository_href", "in": "path", "description": "URI of Rpm Repository. e.g.: /pulp/api/v3/repositories/rpm/rpm/1/", "required": true, "type": "string"}]}, "{rpm_repository_href}sync/": {"post": {"operationId": "sync", "summary": "Sync from remote", "description": "Trigger an asynchronous task to sync RPM content.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositorySyncURL"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: rpm"]}, "parameters": [{"name": "rpm_repository_href", "in": "path", "description": "URI of Rpm Repository. e.g.: /pulp/api/v3/repositories/rpm/rpm/1/", "required": true, "type": "string"}]}, "{rpm_repository_href}versions/": {"get": {"operationId": "list", "summary": "List repository versions", "description": "RpmRepositoryVersion represents a single rpm repository version.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "number", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "number__lt", "in": "query", "description": "Filter results where number is less than value", "required": false, "type": "number"}, {"name": "number__lte", "in": "query", "description": "Filter results where number is less than or equal to value", "required": false, "type": "number"}, {"name": "number__gt", "in": "query", "description": "Filter results where number is greater than value", "required": false, "type": "number"}, {"name": "number__gte", "in": "query", "description": "Filter results where number is greater than or equal to value", "required": false, "type": "number"}, {"name": "number__range", "in": "query", "description": "Filter results where number is between two comma separated values", "required": false, "type": "number"}, {"name": "pulp_created__lt", "in": "query", "description": "Filter results where pulp_created is less than value", "required": false, "type": "string"}, {"name": "pulp_created__lte", "in": "query", "description": "Filter results where pulp_created is less than or equal to value", "required": false, "type": "string"}, {"name": "pulp_created__gt", "in": "query", "description": "Filter results where pulp_created is greater than value", "required": false, "type": "string"}, {"name": "pulp_created__gte", "in": "query", "description": "Filter results where pulp_created is greater than or equal to value", "required": false, "type": "string"}, {"name": "pulp_created__range", "in": "query", "description": "Filter results where pulp_created is between two comma separated values", "required": false, "type": "string"}, {"name": "content", "in": "query", "description": "Content Unit referenced by HREF", "required": false, "type": "string"}, {"name": "pulp_created", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/RepositoryVersion"}}}}}}, "tags": ["repositories: rpm versions"]}, "parameters": [{"name": "rpm_repository_href", "in": "path", "description": "URI of Rpm Repository. e.g.: /pulp/api/v3/repositories/rpm/rpm/1/", "required": true, "type": "string"}]}, "{rpm_repository_version_href}": {"get": {"operationId": "read", "summary": "Inspect a repository version", "description": "RpmRepositoryVersion represents a single rpm repository version.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RepositoryVersion"}}}, "tags": ["repositories: rpm versions"]}, "delete": {"operationId": "delete", "summary": "Delete a repository version", "description": "Trigger an asynchronous task to delete a repositroy version.", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: rpm versions"]}, "parameters": [{"name": "rpm_repository_version_href", "in": "path", "description": "URI of Repository Version. e.g.: /pulp/api/v3/repositories/rpm/rpm/1/versions/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/status/": {"get": {"operationId": "status_read", "summary": "Inspect status of Pulp", "description": "Returns app information including the version of pulpcore and loaded pulp plugins,\nknown workers, database connection status, and messaging connection status", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Status"}}}, "tags": ["status"]}, "parameters": []}, "/pulp/api/v3/tasks/": {"get": {"operationId": "list", "summary": "List tasks", "description": "", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "state", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__in", "in": "query", "description": "Filter results where state is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "worker", "in": "query", "description": "Foreign Key referenced by HREF", "required": false, "type": "string"}, {"name": "worker__in", "in": "query", "description": "Filter results where worker is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "name__contains", "in": "query", "description": "Filter results where name contains value", "required": false, "type": "string"}, {"name": "started_at__lt", "in": "query", "description": "Filter results where started_at is less than value", "required": false, "type": "string"}, {"name": "started_at__lte", "in": "query", "description": "Filter results where started_at is less than or equal to value", "required": false, "type": "string"}, {"name": "started_at__gt", "in": "query", "description": "Filter results where started_at is greater than value", "required": false, "type": "string"}, {"name": "started_at__gte", "in": "query", "description": "Filter results where started_at is greater than or equal to value", "required": false, "type": "string"}, {"name": "started_at__range", "in": "query", "description": "Filter results where started_at is between two comma separated values", "required": false, "type": "string"}, {"name": "finished_at__lt", "in": "query", "description": "Filter results where finished_at is less than value", "required": false, "type": "string"}, {"name": "finished_at__lte", "in": "query", "description": "Filter results where finished_at is less than or equal to value", "required": false, "type": "string"}, {"name": "finished_at__gt", "in": "query", "description": "Filter results where finished_at is greater than value", "required": false, "type": "string"}, {"name": "finished_at__gte", "in": "query", "description": "Filter results where finished_at is greater than or equal to value", "required": false, "type": "string"}, {"name": "finished_at__range", "in": "query", "description": "Filter results where finished_at is between two comma separated values", "required": false, "type": "string"}, {"name": "reserved_resources_record", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "created_resources", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "started_at", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "finished_at", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "parent", "in": "query", "description": "Foreign Key referenced by HREF", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Task"}}}}}}, "tags": ["tasks"]}, "parameters": []}, "{task_href}": {"get": {"operationId": "read", "summary": "Inspect a task", "description": "", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Task"}}}, "tags": ["tasks"]}, "patch": {"operationId": "tasks_cancel", "summary": "Cancel a task", "description": "This operation cancels a task.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TaskCancel"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Task"}}}, "tags": ["tasks"]}, "delete": {"operationId": "delete", "summary": "Delete a task", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["tasks"]}, "parameters": [{"name": "task_href", "in": "path", "description": "URI of Task. e.g.: /pulp/api/v3/tasks/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/uploads/": {"get": {"operationId": "list", "summary": "List uploads", "description": "View for chunked uploads.", "parameters": [{"name": "completed", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Upload"}}}}}}, "tags": ["uploads"]}, "post": {"operationId": "create", "summary": "Create an upload", "description": "View for chunked uploads.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Upload"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Upload"}}}, "tags": ["uploads"]}, "parameters": []}, "{upload_href}": {"get": {"operationId": "read", "summary": "Inspect an upload", "description": "View for chunked uploads.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UploadDetail"}}}, "tags": ["uploads"]}, "put": {"operationId": "update", "summary": "Upload a file chunk", "description": "Upload a chunk for an upload.", "parameters": [{"name": "file", "in": "formData", "description": "A chunk of the uploaded file.", "required": true, "type": "file"}, {"name": "sha256", "in": "formData", "description": "The SHA-256 checksum of the chunk if available.", "required": false, "type": "string", "minLength": 1, "x-nullable": true}, {"name": "Content-Range", "in": "header", "description": "The Content-Range header specifies the location of the file chunk within the file.", "required": true, "type": "string", "pattern": "^bytes (\\d+)-(\\d+)/(\\d+|[*])$"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Upload"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["uploads"]}, "delete": {"operationId": "delete", "summary": "Delete an upload", "description": "View for chunked uploads.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["uploads"]}, "parameters": [{"name": "upload_href", "in": "path", "description": "URI of Upload. e.g.: /pulp/api/v3/uploads/1/", "required": true, "type": "string"}]}, "{upload_href}commit/": {"post": {"operationId": "commit", "summary": "Finish an Upload", "description": "Queues a Task that creates an Artifact, and the Upload gets deleted and cannot be re-used.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UploadCommit"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["uploads"]}, "parameters": [{"name": "upload_href", "in": "path", "description": "URI of Upload. e.g.: /pulp/api/v3/uploads/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/workers/": {"get": {"operationId": "list", "summary": "List workers", "description": "", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "last_heartbeat__lt", "in": "query", "description": "Filter results where last_heartbeat is less than value", "required": false, "type": "string"}, {"name": "last_heartbeat__lte", "in": "query", "description": "Filter results where last_heartbeat is less than or equal to value", "required": false, "type": "string"}, {"name": "last_heartbeat__gt", "in": "query", "description": "Filter results where last_heartbeat is greater than value", "required": false, "type": "string"}, {"name": "last_heartbeat__gte", "in": "query", "description": "Filter results where last_heartbeat is greater than or equal to value", "required": false, "type": "string"}, {"name": "last_heartbeat__range", "in": "query", "description": "Filter results where last_heartbeat is between two comma separated values", "required": false, "type": "string"}, {"name": "online", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "missing", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "last_heartbeat", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Worker"}}}}}}, "tags": ["workers"]}, "parameters": []}, "{worker_href}": {"get": {"operationId": "read", "summary": "Inspect a worker", "description": "", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Worker"}}}, "tags": ["workers"]}, "parameters": [{"name": "worker_href", "in": "path", "description": "URI of Worker. e.g.: /pulp/api/v3/workers/1/", "required": true, "type": "string"}]}}, "definitions": {"Artifact": {"type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "file": {"title": "File", "description": "The stored file.", "type": "string", "readOnly": true}, "size": {"title": "Size", "description": "The size of the file in bytes.", "type": "integer"}, "md5": {"title": "Md5", "description": "The MD5 checksum of the file if available.", "type": "string", "minLength": 1, "x-nullable": true}, "sha1": {"title": "Sha1", "description": "The SHA-1 checksum of the file if available.", "type": "string", "minLength": 1, "x-nullable": true}, "sha224": {"title": "Sha224", "description": "The SHA-224 checksum of the file if available.", "type": "string", "minLength": 1, "x-nullable": true}, "sha256": {"title": "Sha256", "description": "The SHA-256 checksum of the file if available.", "type": "string", "minLength": 1, "x-nullable": true}, "sha384": {"title": "Sha384", "description": "The SHA-384 checksum of the file if available.", "type": "string", "minLength": 1, "x-nullable": true}, "sha512": {"title": "Sha512", "description": "The SHA-512 checksum of the file if available.", "type": "string", "minLength": 1, "x-nullable": true}}}, "file.FileContent": {"required": ["relative_path"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "artifact": {"title": "Artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "relative_path": {"title": "Relative path", "description": "Path where the artifact is located relative to distributions base_path", "type": "string", "minLength": 1}, "md5": {"title": "Md5", "description": "The MD5 checksum if available.", "type": "string", "readOnly": true, "minLength": 1}, "sha1": {"title": "Sha1", "description": "The SHA-1 checksum if available.", "type": "string", "readOnly": true, "minLength": 1}, "sha224": {"title": "Sha224", "description": "The SHA-224 checksum if available.", "type": "string", "readOnly": true, "minLength": 1}, "sha256": {"title": "Sha256", "description": "The SHA-256 checksum if available.", "type": "string", "readOnly": true, "minLength": 1}, "sha384": {"title": "Sha384", "description": "The SHA-384 checksum if available.", "type": "string", "readOnly": true, "minLength": 1}, "sha512": {"title": "Sha512", "description": "The SHA-512 checksum if available.", "type": "string", "readOnly": true, "minLength": 1}}}, "AsyncOperationResponse": {"required": ["task"], "type": "object", "properties": {"task": {"title": "Task", "description": "The href of the task.", "type": "string", "format": "uri"}}}, "rpm.UpdateCollection": {"description": "List of packages", "required": ["name", "shortname"], "type": "object", "properties": {"name": {"title": "Name", "description": "Collection name.", "type": "string"}, "shortname": {"title": "Shortname", "description": "Collection short name.", "type": "string"}, "packages": {"description": "List of packages", "type": "array", "items": {"type": "object", "additionalProperties": {"type": "string"}}, "readOnly": true}}}, "rpm.UpdateRecord": {"type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "artifact": {"title": "Artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "id": {"title": "Id", "description": "Update id (short update name, e.g. RHEA-2013:1777)", "type": "string", "readOnly": true, "minLength": 1}, "updated_date": {"title": "Updated date", "description": "Date when the update was updated (e.g. '2013-12-02 00:00:00')", "type": "string", "readOnly": true, "minLength": 1}, "description": {"title": "Description", "description": "Update description", "type": "string", "readOnly": true}, "issued_date": {"title": "Issued date", "description": "Date when the update was issued (e.g. '2013-12-02 00:00:00')", "type": "string", "readOnly": true, "minLength": 1}, "fromstr": {"title": "Fromstr", "description": "Source of the update (e.g. security@redhat.com)", "type": "string", "readOnly": true}, "status": {"title": "Status", "description": "Update status ('final', ...)", "type": "string", "readOnly": true}, "title": {"title": "Title", "description": "Update name", "type": "string", "readOnly": true}, "summary": {"title": "Summary", "description": "Short summary", "type": "string", "readOnly": true}, "version": {"title": "Version", "description": "Update version (probably always an integer number)", "type": "string", "readOnly": true}, "type": {"title": "Type", "description": "Update type ('enhancement', 'bugfix', ...)", "type": "string", "readOnly": true}, "severity": {"title": "Severity", "description": "Severity", "type": "string", "readOnly": true}, "solution": {"title": "Solution", "description": "Solution", "type": "string", "readOnly": true}, "release": {"title": "Release", "description": "Update release", "type": "string", "readOnly": true}, "rights": {"title": "Rights", "description": "Copyrights", "type": "string", "readOnly": true}, "pushcount": {"title": "Pushcount", "description": "Push count", "type": "string", "readOnly": true}, "pkglist": {"description": "List of packages", "type": "array", "items": {"$ref": "#/definitions/rpm.UpdateCollection"}, "readOnly": true}, "references": {"description": "List of references", "type": "array", "items": {"type": "object", "additionalProperties": {"type": "string"}}, "readOnly": true}, "reboot_suggested": {"title": "Reboot suggested", "description": "Reboot suggested", "type": "boolean", "readOnly": true}}}, "Addon": {"required": ["addon_id", "uid", "name", "type", "packages"], "type": "object", "properties": {"addon_id": {"title": "Addon id", "description": "Addon id.", "type": "string", "minLength": 1}, "uid": {"title": "Uid", "description": "Addon uid.", "type": "string", "minLength": 1}, "name": {"title": "Name", "description": "Addon name.", "type": "string", "minLength": 1}, "type": {"title": "Type", "description": "Addon type.", "type": "string", "minLength": 1}, "packages": {"title": "Packages", "description": "Relative path to directory with binary RPMs.", "type": "string", "minLength": 1}}}, "Checksum": {"required": ["path", "checksum"], "type": "object", "properties": {"path": {"title": "Path", "description": "File path.", "type": "string", "minLength": 1}, "checksum": {"title": "Checksum", "description": "Checksum for the file.", "type": "string", "minLength": 1}}}, "Image": {"required": ["name", "path", "platforms", "artifact"], "type": "object", "properties": {"name": {"title": "Name", "description": "File name.", "type": "string", "minLength": 1}, "path": {"title": "Path", "description": "File path.", "type": "string", "minLength": 1}, "platforms": {"title": "Platforms", "description": "Compatible platforms.", "type": "string", "minLength": 1}, "artifact": {"$ref": "#/definitions/Artifact"}}}, "Variant": {"required": ["variant_id", "uid", "name", "type", "packages", "source_packages", "source_repository", "debug_packages", "debug_repository", "identity"], "type": "object", "properties": {"variant_id": {"title": "Variant id", "description": "Variant id.", "type": "string", "minLength": 1}, "uid": {"title": "Uid", "description": "Variant uid.", "type": "string", "minLength": 1}, "name": {"title": "Name", "description": "Variant name.", "type": "string", "minLength": 1}, "type": {"title": "Type", "description": "Variant type.", "type": "string", "minLength": 1}, "packages": {"title": "Packages", "description": "Relative path to directory with binary RPMs.", "type": "string", "minLength": 1}, "source_packages": {"title": "Source packages", "description": "Relative path to directory with source RPMs.", "type": "string", "minLength": 1}, "source_repository": {"title": "Source repository", "description": "Relative path to YUM repository with source RPMs.", "type": "string", "minLength": 1}, "debug_packages": {"title": "Debug packages", "description": "Relative path to directory with debug RPMs.", "type": "string", "minLength": 1}, "debug_repository": {"title": "Debug repository", "description": "Relative path to YUM repository with debug RPMs.", "type": "string", "minLength": 1}, "identity": {"title": "Identity", "description": "Relative path to a pem file that identifies a product.", "type": "string", "minLength": 1}}}, "rpm.DistributionTree": {"required": ["header_version", "release_name", "release_short", "release_version", "release_is_layered", "base_product_name", "base_product_short", "base_product_version", "arch", "build_timestamp", "instimage", "mainimage", "discnum", "totaldiscs", "addons", "checksums", "images", "variants"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "header_version": {"title": "Header version", "description": "Header Version.", "type": "string", "minLength": 1}, "release_name": {"title": "Release name", "description": "Release name.", "type": "string", "minLength": 1}, "release_short": {"title": "Release short", "description": "Release short name.", "type": "string", "minLength": 1}, "release_version": {"title": "Release version", "description": "Release version.", "type": "string", "minLength": 1}, "release_is_layered": {"title": "Release is layered", "description": "Typically False for an operating system, True otherwise.", "type": "boolean"}, "base_product_name": {"title": "Base product name", "description": "Base Product name.", "type": "string", "minLength": 1}, "base_product_short": {"title": "Base product short", "description": "Base Product short name.", "type": "string", "minLength": 1}, "base_product_version": {"title": "Base product version", "description": "Base Product version.", "type": "string", "minLength": 1}, "arch": {"title": "Arch", "description": "Tree architecturerch.", "type": "string", "minLength": 1}, "build_timestamp": {"title": "Build timestamp", "description": "Tree build time timestamp.", "type": "number"}, "instimage": {"title": "Instimage", "description": "Relative path to Anaconda instimage.", "type": "string", "minLength": 1}, "mainimage": {"title": "Mainimage", "description": "Relative path to Anaconda stage2 image.", "type": "string", "minLength": 1}, "discnum": {"title": "Discnum", "description": "Disc number.", "type": "integer"}, "totaldiscs": {"title": "Totaldiscs", "description": "Number of discs in media set.", "type": "integer"}, "addons": {"type": "array", "items": {"$ref": "#/definitions/Addon"}}, "checksums": {"type": "array", "items": {"$ref": "#/definitions/Checksum"}}, "images": {"type": "array", "items": {"$ref": "#/definitions/Image"}}, "variants": {"type": "array", "items": {"$ref": "#/definitions/Variant"}}}}, "rpm.ModulemdDefaults": {"required": ["module", "stream", "profiles"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "artifact": {"title": "Artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "module": {"title": "Module", "description": "Modulemd name.", "type": "string", "minLength": 1}, "stream": {"title": "Stream", "description": "Modulemd default stream.", "type": "string", "minLength": 1}, "profiles": {"title": "Profiles", "description": "Default profiles for modulemd streams.", "type": "object"}}}, "rpm.Modulemd": {"required": ["name", "stream", "version", "context", "arch", "artifacts", "dependencies"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "artifact": {"title": "Artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "name": {"title": "Name", "description": "Modulemd name.", "type": "string", "minLength": 1}, "stream": {"title": "Stream", "description": "Stream name.", "type": "string", "minLength": 1}, "version": {"title": "Version", "description": "Modulemd version.", "type": "string", "minLength": 1}, "context": {"title": "Context", "description": "Modulemd context.", "type": "string", "minLength": 1}, "arch": {"title": "Arch", "description": "Modulemd architecture.", "type": "string", "minLength": 1}, "artifacts": {"title": "Artifacts", "description": "Modulemd artifacts.", "type": "object"}, "dependencies": {"title": "Dependencies", "description": "Modulemd dependencies.", "type": "object"}, "packages": {"description": "Modulemd artifacts' packages.", "type": "array", "items": {"description": "Modulemd artifacts' packages.", "type": "string", "x-nullable": true}, "uniqueItems": true}}}, "rpm.PackageCategory": {"required": ["id", "name", "description", "display_order", "group_ids", "desc_by_lang", "name_by_lang", "digest"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "id": {"title": "Id", "description": "Category id.", "type": "string", "minLength": 1}, "name": {"title": "Name", "description": "Category name.", "type": "string"}, "description": {"title": "Description", "description": "Category description.", "type": "string"}, "display_order": {"title": "Display order", "description": "Category display order.", "type": "integer"}, "group_ids": {"title": "Group ids", "description": "Category group list.", "type": "object"}, "desc_by_lang": {"title": "Desc by lang", "description": "Category description by language.", "type": "object"}, "name_by_lang": {"title": "Name by lang", "description": "Category name by language.", "type": "object"}, "digest": {"title": "Digest", "description": "Category digest.", "type": "string", "minLength": 1}, "packagegroups": {"description": "PackageGroups related to this category.", "type": "array", "items": {"description": "PackageGroups related to this category.", "type": "string", "format": "uri", "x-nullable": true}, "uniqueItems": true}}}, "rpm.PackageEnvironment": {"required": ["id", "name", "description", "display_order", "group_ids", "option_ids", "desc_by_lang", "name_by_lang", "digest"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "id": {"title": "Id", "description": "Environment id.", "type": "string", "minLength": 1}, "name": {"title": "Name", "description": "Environment name.", "type": "string"}, "description": {"title": "Description", "description": "Environment description.", "type": "string"}, "display_order": {"title": "Display order", "description": "Environment display order.", "type": "integer"}, "group_ids": {"title": "Group ids", "description": "Environment group list.", "type": "object"}, "option_ids": {"title": "Option ids", "description": "Environment option ids", "type": "object"}, "desc_by_lang": {"title": "Desc by lang", "description": "Environment description by language.", "type": "object"}, "name_by_lang": {"title": "Name by lang", "description": "Environment name by language.", "type": "object"}, "digest": {"title": "Digest", "description": "Environment digest.", "type": "string", "minLength": 1}, "packagegroups": {"description": "Groups related to this Environment.", "type": "array", "items": {"description": "Groups related to this Environment.", "type": "string", "format": "uri", "x-nullable": true}, "uniqueItems": true}, "optionalgroups": {"description": "Groups optionally related to this Environment.", "type": "array", "items": {"description": "Groups optionally related to this Environment.", "type": "string", "format": "uri", "x-nullable": true}, "uniqueItems": true}}}, "rpm.PackageGroup": {"required": ["id", "display_order", "name", "description", "packages", "desc_by_lang", "name_by_lang", "digest"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "id": {"title": "Id", "description": "PackageGroup id.", "type": "string", "minLength": 1}, "default": {"title": "Default", "description": "PackageGroup default.", "type": "boolean"}, "user_visible": {"title": "User visible", "description": "PackageGroup user visibility.", "type": "boolean"}, "display_order": {"title": "Display order", "description": "PackageGroup display order.", "type": "integer"}, "name": {"title": "Name", "description": "PackageGroup name.", "type": "string"}, "description": {"title": "Description", "description": "PackageGroup description.", "type": "string"}, "packages": {"title": "Packages", "description": "PackageGroup package list.", "type": "object"}, "biarch_only": {"title": "Biarch only", "description": "PackageGroup biarch only.", "type": "boolean"}, "desc_by_lang": {"title": "Desc by lang", "description": "PackageGroup description by language.", "type": "object"}, "name_by_lang": {"title": "Name by lang", "description": "PackageGroup name by language.", "type": "object"}, "digest": {"title": "Digest", "description": "PackageGroup digest.", "type": "string", "minLength": 1}, "related_packages": {"description": "Packages related to this PackageGroup.", "type": "array", "items": {"description": "Packages related to this PackageGroup.", "type": "string", "format": "uri", "x-nullable": true}, "uniqueItems": true}}}, "rpm.PackageLangpacks": {"required": ["matches", "digest"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "matches": {"title": "Matches", "description": "Langpacks matches.", "type": "object"}, "digest": {"title": "Digest", "description": "Langpacks digest.", "type": "string", "minLength": 1}}}, "rpm.Package": {"type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "artifact": {"title": "Artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "name": {"title": "Name", "description": "Name of the package", "type": "string", "readOnly": true, "minLength": 1}, "epoch": {"title": "Epoch", "description": "The package's epoch", "type": "string", "readOnly": true}, "version": {"title": "Version", "description": "The version of the package. For example, '2.8.0'", "type": "string", "readOnly": true, "minLength": 1}, "release": {"title": "Release", "description": "The release of a particular version of the package. e.g. '1.el7' or '3.f24'", "type": "string", "readOnly": true, "minLength": 1}, "arch": {"title": "Arch", "description": "The target architecture for a package.For example, 'x86_64', 'i686', or 'noarch'", "type": "string", "readOnly": true, "minLength": 1}, "pkgId": {"title": "Pkgid", "description": "Checksum of the package file", "type": "string", "readOnly": true, "minLength": 1}, "checksum_type": {"title": "Checksum type", "description": "Type of checksum, e.g. 'sha256', 'md5'", "type": "string", "readOnly": true, "minLength": 1}, "summary": {"title": "Summary", "description": "Short description of the packaged software", "type": "string", "readOnly": true}, "description": {"title": "Description", "description": "In-depth description of the packaged software", "type": "string", "readOnly": true}, "url": {"title": "Url", "description": "URL with more information about the packaged software", "type": "string", "readOnly": true}, "changelogs": {"title": "Changelogs", "description": "Changelogs that package contains", "type": "object", "readOnly": true, "default": "[]"}, "files": {"title": "Files", "description": "Files that package contains", "type": "object", "readOnly": true, "default": "[]"}, "requires": {"title": "Requires", "description": "Capabilities the package requires", "type": "object", "readOnly": true, "default": "[]"}, "provides": {"title": "Provides", "description": "Capabilities the package provides", "type": "object", "readOnly": true, "default": "[]"}, "conflicts": {"title": "Conflicts", "description": "Capabilities the package conflicts", "type": "object", "readOnly": true, "default": "[]"}, "obsoletes": {"title": "Obsoletes", "description": "Capabilities the package obsoletes", "type": "object", "readOnly": true, "default": "[]"}, "suggests": {"title": "Suggests", "description": "Capabilities the package suggests", "type": "object", "readOnly": true, "default": "[]"}, "enhances": {"title": "Enhances", "description": "Capabilities the package enhances", "type": "object", "readOnly": true, "default": "[]"}, "recommends": {"title": "Recommends", "description": "Capabilities the package recommends", "type": "object", "readOnly": true, "default": "[]"}, "supplements": {"title": "Supplements", "description": "Capabilities the package supplements", "type": "object", "readOnly": true, "default": "[]"}, "location_base": {"title": "Location base", "description": "Base location of this package", "type": "string", "readOnly": true}, "location_href": {"title": "Location href", "description": "Relative location of package to the repodata", "type": "string", "readOnly": true, "minLength": 1}, "rpm_buildhost": {"title": "Rpm buildhost", "description": "Hostname of the system that built the package", "type": "string", "readOnly": true}, "rpm_group": {"title": "Rpm group", "description": "RPM group (See: http://fedoraproject.org/wiki/RPMGroups)", "type": "string", "readOnly": true}, "rpm_license": {"title": "Rpm license", "description": "License term applicable to the package software (GPLv2, etc.)", "type": "string", "readOnly": true}, "rpm_packager": {"title": "Rpm packager", "description": "Person or persons responsible for creating the package", "type": "string", "readOnly": true}, "rpm_sourcerpm": {"title": "Rpm sourcerpm", "description": "Name of the source package (srpm) the package was built from", "type": "string", "readOnly": true}, "rpm_vendor": {"title": "Rpm vendor", "description": "Name of the organization that produced the package", "type": "string", "readOnly": true}, "rpm_header_start": {"title": "Rpm header start", "description": "First byte of the header", "type": "integer", "readOnly": true}, "rpm_header_end": {"title": "Rpm header end", "description": "Last byte of the header", "type": "integer", "readOnly": true}, "is_modular": {"title": "Is modular", "description": "Flag to identify if the package is modular", "type": "boolean", "readOnly": true}, "size_archive": {"title": "Size archive", "description": "Size, in bytes, of the archive portion of the original package file", "type": "integer", "readOnly": true}, "size_installed": {"title": "Size installed", "description": "Total size, in bytes, of every file installed by this package", "type": "integer", "readOnly": true}, "size_package": {"title": "Size package", "description": "Size, in bytes, of the package", "type": "integer", "readOnly": true}, "time_build": {"title": "Time build", "description": "Time the package was built in seconds since the epoch", "type": "integer", "readOnly": true}, "time_file": {"title": "Time file", "description": "The 'file' time attribute in the primary XML - file mtime in seconds since the epoch.", "type": "integer", "readOnly": true}}}, "rpm.RepoMetadataFile": {"required": ["data_type", "checksum_type", "checksum"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "artifact": {"title": "Artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "data_type": {"title": "Data type", "description": "Metadata type.", "type": "string", "minLength": 1}, "checksum_type": {"title": "Checksum type", "description": "Checksum type for the file.", "type": "string", "minLength": 1}, "checksum": {"title": "Checksum", "description": "Checksum for the file.", "type": "string", "minLength": 1}}}, "file.FileDistribution": {"required": ["base_path", "name"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "base_path": {"title": "Base path", "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")", "type": "string", "minLength": 1}, "base_url": {"title": "Base url", "description": "The URL for accessing the publication as defined by this distribution.", "type": "string", "readOnly": true, "minLength": 1}, "content_guard": {"title": "Content guard", "description": "An optional content-guard.", "type": "string", "format": "uri", "x-nullable": true}, "name": {"title": "Name", "description": "A unique name. Ex, `rawhide` and `stable`.", "type": "string", "minLength": 1}, "publication": {"title": "Publication", "description": "Publication to be served", "type": "string", "format": "uri", "x-nullable": true}}}, "rpm.RpmDistribution": {"required": ["base_path", "name"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "base_path": {"title": "Base path", "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")", "type": "string", "minLength": 1}, "base_url": {"title": "Base url", "description": "The URL for accessing the publication as defined by this distribution.", "type": "string", "readOnly": true, "minLength": 1}, "content_guard": {"title": "Content guard", "description": "An optional content-guard.", "type": "string", "format": "uri", "x-nullable": true}, "name": {"title": "Name", "description": "A unique name. Ex, `rawhide` and `stable`.", "type": "string", "minLength": 1}, "publication": {"title": "Publication", "description": "Publication to be served", "type": "string", "format": "uri", "x-nullable": true}}}, "file.FileFileSystemExporter": {"required": ["path", "name"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "path": {"title": "Path", "description": "File system location to export to.", "type": "string", "minLength": 1}, "name": {"title": "Name", "description": "Unique name of the file system exporter.", "type": "string", "minLength": 1}}}, "PublicationExport": {"required": ["publication"], "type": "object", "properties": {"publication": {"title": "Publication", "description": "A URI of the publication to be exported.", "type": "string", "format": "uri"}}}, "file.FilePublication": {"type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "repository_version": {"title": "Repository version", "type": "string", "format": "uri"}, "repository": {"title": "Repository", "description": "A URI of the repository to be published.", "type": "string", "format": "uri"}, "distributions": {"description": "This publication is currently hosted as defined by these distributions.", "type": "array", "items": {"description": "This publication is currently hosted as defined by these distributions.", "type": "string", "format": "uri"}, "readOnly": true, "uniqueItems": true}, "manifest": {"title": "Manifest", "description": "Filename to use for manifest file containing metadata for all the files.", "type": "string", "default": "PULP_MANIFEST", "minLength": 1}}}, "rpm.RpmPublication": {"type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "repository_version": {"title": "Repository version", "type": "string", "format": "uri"}, "repository": {"title": "Repository", "description": "A URI of the repository to be published.", "type": "string", "format": "uri"}}}, "file.FileRemote": {"required": ["name", "url"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "name": {"title": "Name", "description": "A unique name for this remote.", "type": "string", "minLength": 1}, "url": {"title": "Url", "description": "The URL of an external content source.", "type": "string", "minLength": 1}, "ca_cert": {"title": "Ca cert", "description": "A string containing the PEM encoded CA certificate used to validate the server certificate presented by the remote server. All new line characters must be escaped. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "client_cert": {"title": "Client cert", "description": "A string containing the PEM encoded client certificate used for authentication. All new line characters must be escaped. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "client_key": {"title": "Client key", "description": "A PEM encoded private key used for authentication. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "tls_validation": {"title": "Tls validation", "description": "If True, TLS peer validation must be performed.", "type": "boolean"}, "proxy_url": {"title": "Proxy url", "description": "The proxy URL. Format: scheme://user:password@host:port", "type": "string", "minLength": 1, "x-nullable": true}, "pulp_last_updated": {"title": "Pulp last updated", "description": "Timestamp of the most recent update of the remote.", "type": "string", "format": "date-time", "readOnly": true}, "download_concurrency": {"title": "Download concurrency", "description": "Total number of simultaneous connections.", "type": "integer", "minimum": 1}, "policy": {"title": "Policy", "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default.", "type": "string", "enum": ["immediate", "on_demand", "streamed"], "default": "immediate"}}}, "rpm.RpmRemote": {"required": ["name", "url"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "name": {"title": "Name", "description": "A unique name for this remote.", "type": "string", "minLength": 1}, "url": {"title": "Url", "description": "The URL of an external content source.", "type": "string", "minLength": 1}, "ca_cert": {"title": "Ca cert", "description": "A string containing the PEM encoded CA certificate used to validate the server certificate presented by the remote server. All new line characters must be escaped. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "client_cert": {"title": "Client cert", "description": "A string containing the PEM encoded client certificate used for authentication. All new line characters must be escaped. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "client_key": {"title": "Client key", "description": "A PEM encoded private key used for authentication. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "tls_validation": {"title": "Tls validation", "description": "If True, TLS peer validation must be performed.", "type": "boolean"}, "proxy_url": {"title": "Proxy url", "description": "The proxy URL. Format: scheme://user:password@host:port", "type": "string", "minLength": 1, "x-nullable": true}, "pulp_last_updated": {"title": "Pulp last updated", "description": "Timestamp of the most recent update of the remote.", "type": "string", "format": "date-time", "readOnly": true}, "download_concurrency": {"title": "Download concurrency", "description": "Total number of simultaneous connections.", "type": "integer", "minimum": 1}, "policy": {"title": "Policy", "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default.", "type": "string", "enum": ["immediate", "on_demand", "streamed"], "default": "immediate"}}}, "file.FileRepository": {"required": ["name"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "versions_href": {"title": "Versions href", "type": "string", "format": "uri", "readOnly": true}, "latest_version_href": {"title": "Latest version href", "type": "string", "format": "uri", "readOnly": true}, "name": {"title": "Name", "description": "A unique name for this repository.", "type": "string", "minLength": 1}, "description": {"title": "Description", "description": "An optional description.", "type": "string", "minLength": 1, "x-nullable": true}}}, "RepositoryAddRemoveContent": {"type": "object", "properties": {"add_content_units": {"description": "A list of content units to add to a new repository version. This content is added after remove_content_units are removed.", "type": "array", "items": {"type": "string"}}, "remove_content_units": {"description": "A list of content units to remove from the latest repository version. You may also specify '*' as an entry to remove all content. This content is removed before add_content_units are added.", "type": "array", "items": {"type": "string"}}, "base_version": {"title": "Base version", "description": "A repository version whose content will be used as the initial set of content for the new repository version", "type": "string", "format": "uri"}}}, "RepositorySyncURL": {"required": ["remote"], "type": "object", "properties": {"remote": {"title": "Remote", "description": "A URI of the repository to be synchronized.", "type": "string", "format": "uri"}, "mirror": {"title": "Mirror", "description": "If ``True``, synchronization will remove all content that is not present in the remote repository. If ``False``, sync will be additive only.", "type": "boolean", "default": false}}}, "ContentSummary": {"title": "Content summary", "description": "Various count summaries of the content in the version and the HREF to view them.", "required": ["added", "removed", "present"], "type": "object", "properties": {"added": {"title": "Added", "type": "object", "additionalProperties": {"type": "object", "additionalProperties": {"type": "string"}}}, "removed": {"title": "Removed", "type": "object", "additionalProperties": {"type": "object", "additionalProperties": {"type": "string"}}}, "present": {"title": "Present", "type": "object", "additionalProperties": {"type": "object", "additionalProperties": {"type": "string"}}}}}, "RepositoryVersion": {"type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "number": {"title": "Number", "type": "integer", "readOnly": true}, "base_version": {"title": "Base version", "description": "A repository version whose content was used as the initial set of content for this repository version", "type": "string", "format": "uri"}, "content_summary": {"$ref": "#/definitions/ContentSummary"}}}, "rpm.RpmRepository": {"required": ["name"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "versions_href": {"title": "Versions href", "type": "string", "format": "uri", "readOnly": true}, "latest_version_href": {"title": "Latest version href", "type": "string", "format": "uri", "readOnly": true}, "name": {"title": "Name", "description": "A unique name for this repository.", "type": "string", "minLength": 1}, "description": {"title": "Description", "description": "An optional description.", "type": "string", "minLength": 1, "x-nullable": true}}}, "Version": {"description": "Version information of Pulp components", "required": ["component", "version"], "type": "object", "properties": {"component": {"title": "Component", "description": "Name of a versioned component of Pulp", "type": "string", "minLength": 1}, "version": {"title": "Version", "description": "Version of the component (e.g. 3.0.0)", "type": "string", "minLength": 1}}}, "Worker": {"description": "List of online workers known to the application. An online worker is actively heartbeating and can respond to new work", "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "name": {"title": "Name", "description": "The name of the worker.", "type": "string", "readOnly": true, "minLength": 1}, "last_heartbeat": {"title": "Last heartbeat", "description": "Timestamp of the last time the worker talked to the service.", "type": "string", "format": "date-time", "readOnly": true}}}, "ContentAppStatus": {"description": "List of online content apps known to the application. An online content app is actively heartbeating and can serve data to clients", "type": "object", "properties": {"name": {"title": "Name", "description": "The name of the worker.", "type": "string", "readOnly": true, "minLength": 1}, "last_heartbeat": {"title": "Last heartbeat", "description": "Timestamp of the last time the worker talked to the service.", "type": "string", "format": "date-time", "readOnly": true}}}, "DatabaseConnection": {"title": "Database connection", "description": "Database connection information", "required": ["connected"], "type": "object", "properties": {"connected": {"title": "Connected", "description": "Info about whether the app can connect to the database", "type": "boolean"}}}, "RedisConnection": {"title": "Redis connection", "description": "Redis connection information", "required": ["connected"], "type": "object", "properties": {"connected": {"title": "Connected", "description": "Info about whether the app can connect to Redis", "type": "boolean"}}}, "Storage": {"title": "Storage", "description": "Storage information", "required": ["total", "used", "free"], "type": "object", "properties": {"total": {"title": "Total", "description": "Total number of bytes", "type": "integer", "minimum": 0}, "used": {"title": "Used", "description": "Number of bytes in use", "type": "integer", "minimum": 0}, "free": {"title": "Free", "description": "Number of free bytes", "type": "integer", "minimum": 0}}}, "Status": {"required": ["versions", "online_workers", "online_content_apps", "database_connection", "redis_connection"], "type": "object", "properties": {"versions": {"description": "Version information of Pulp components", "type": "array", "items": {"$ref": "#/definitions/Version"}}, "online_workers": {"description": "List of online workers known to the application. An online worker is actively heartbeating and can respond to new work", "type": "array", "items": {"$ref": "#/definitions/Worker"}}, "online_content_apps": {"description": "List of online content apps known to the application. An online content app is actively heartbeating and can serve data to clients", "type": "array", "items": {"$ref": "#/definitions/ContentAppStatus"}}, "database_connection": {"$ref": "#/definitions/DatabaseConnection"}, "redis_connection": {"$ref": "#/definitions/RedisConnection"}, "storage": {"$ref": "#/definitions/Storage"}}}, "ProgressReport": {"type": "object", "properties": {"message": {"title": "Message", "description": "The message shown to the user for the progress report.", "type": "string", "readOnly": true, "minLength": 1}, "code": {"title": "Code", "description": "Identifies the type of progress report'.", "type": "string", "readOnly": true, "minLength": 1}, "state": {"title": "State", "description": "The current state of the progress report. The possible values are: 'waiting', 'skipped', 'running', 'completed', 'failed' and 'canceled'. The default is 'waiting'.", "type": "string", "readOnly": true, "minLength": 1}, "total": {"title": "Total", "description": "The total count of items.", "type": "integer", "readOnly": true}, "done": {"title": "Done", "description": "The count of items already processed. Defaults to 0.", "type": "integer", "readOnly": true}, "suffix": {"title": "Suffix", "description": "The suffix to be shown with the progress report.", "type": "string", "readOnly": true, "minLength": 1, "x-nullable": true}}}, "ReservedResources": {"type": "object", "properties": {}}, "Task": {"required": ["name"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "state": {"title": "State", "description": "The current state of the task. The possible values include: 'waiting', 'skipped', 'running', 'completed', 'failed' and 'canceled'.", "type": "string", "readOnly": true, "minLength": 1}, "name": {"title": "Name", "description": "The name of task.", "type": "string", "minLength": 1}, "started_at": {"title": "Started at", "description": "Timestamp of the when this task started execution.", "type": "string", "format": "date-time", "readOnly": true}, "finished_at": {"title": "Finished at", "description": "Timestamp of the when this task stopped execution.", "type": "string", "format": "date-time", "readOnly": true}, "error": {"title": "Error", "description": "A JSON Object of a fatal error encountered during the execution of this task.", "type": "object", "additionalProperties": {"type": "object"}, "readOnly": true}, "worker": {"title": "Worker", "description": "The worker associated with this task. This field is empty if a worker is not yet assigned.", "type": "string", "format": "uri", "readOnly": true}, "progress_reports": {"type": "array", "items": {"$ref": "#/definitions/ProgressReport"}, "readOnly": true}, "created_resources": {"description": "Resources created by this task.", "type": "array", "items": {"description": "Resources created by this task.", "type": "string", "format": "uri"}, "readOnly": true, "uniqueItems": true}, "reserved_resources_record": {"type": "array", "items": {"$ref": "#/definitions/ReservedResources"}, "readOnly": true}}}, "TaskCancel": {"required": ["state"], "type": "object", "properties": {"state": {"title": "State", "description": "The desired state of the task. Only 'canceled' is accepted.", "type": "string", "minLength": 1}}}, "Upload": {"required": ["size"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "size": {"title": "Size", "description": "The size of the upload in bytes.", "type": "integer"}, "completed": {"title": "Completed", "description": "Timestamp when upload is committed.", "type": "string", "format": "date-time", "readOnly": true}}}, "UploadChunk": {"type": "object", "properties": {"file": {"title": "File", "description": "A chunk of the uploaded file.", "type": "string", "readOnly": true}, "sha256": {"title": "Sha256", "description": "The SHA-256 checksum of the chunk if available.", "type": "string", "minLength": 1, "x-nullable": true}, "offset": {"title": "Offset", "type": "integer", "readOnly": true}, "size": {"title": "Size", "type": "integer", "readOnly": true}}}, "UploadDetail": {"required": ["size"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "size": {"title": "Size", "description": "The size of the upload in bytes.", "type": "integer"}, "completed": {"title": "Completed", "description": "Timestamp when upload is committed.", "type": "string", "format": "date-time", "readOnly": true}, "chunks": {"type": "array", "items": {"$ref": "#/definitions/UploadChunk"}, "readOnly": true}}}, "UploadCommit": {"required": ["sha256"], "type": "object", "properties": {"sha256": {"title": "Sha256", "description": "The expected sha256 checksum for the file.", "type": "string", "minLength": 1}}}}, "tags": [{"name": "artifacts", "x-displayName": "Artifacts"}, {"name": "content: files", "x-displayName": "Content: Files"}, {"name": "content: advisories", "x-displayName": "Content: Advisories"}, {"name": "content: distribution_trees", "x-displayName": "Content: Distribution_Trees"}, {"name": "content: modulemd_defaults", "x-displayName": "Content: Modulemd_Defaults"}, {"name": "content: modulemds", "x-displayName": "Content: Modulemds"}, {"name": "content: packagecategories", "x-displayName": "Content: Packagecategories"}, {"name": "content: packageenvironments", "x-displayName": "Content: Packageenvironments"}, {"name": "content: packagegroups", "x-displayName": "Content: Packagegroups"}, {"name": "content: packagelangpacks", "x-displayName": "Content: Packagelangpacks"}, {"name": "content: packages", "x-displayName": "Content: Packages"}, {"name": "content: repo_metadata_files", "x-displayName": "Content: Repo_Metadata_Files"}, {"name": "distributions: file", "x-displayName": "Distributions: File"}, {"name": "distributions: rpm", "x-displayName": "Distributions: Rpm"}, {"name": "file_exporters: file", "x-displayName": "File_Exporters: File"}, {"name": "orphans", "x-displayName": "Orphans"}, {"name": "publications: file", "x-displayName": "Publications: File"}, {"name": "publications: rpm", "x-displayName": "Publications: Rpm"}, {"name": "remotes: file", "x-displayName": "Remotes: File"}, {"name": "remotes: rpm", "x-displayName": "Remotes: Rpm"}, {"name": "repositories: file", "x-displayName": "Repositories: File"}, {"name": "repositories: file versions", "x-displayName": "Repositories: File Versions"}, {"name": "repositories: rpm", "x-displayName": "Repositories: Rpm"}, {"name": "repositories: rpm versions", "x-displayName": "Repositories: Rpm Versions"}, {"name": "status", "x-displayName": "Status"}, {"name": "tasks", "x-displayName": "Tasks"}, {"name": "uploads", "x-displayName": "Uploads"}, {"name": "workers", "x-displayName": "Workers"}]}