=begin
#Pulp 3 API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v3

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.7

=end

require 'uri'

module SwaggerClient
  class ContentModulemdDefaultsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create a modulemd defaults
    # Trigger an asynchronous task to create content,optionally create new repository version.
    # @param relative_path Path where the artifact is located relative to distributions base_path
    # @param _module Modulemd name.
    # @param stream Modulemd default stream.
    # @param profiles Default profiles for modulemd streams.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :artifact Artifact file representing the physical content
    # @option opts [File] :file An uploaded file that should be turned into the artifact of the content unit.
    # @option opts [String] :repository A URI of a repository the new content unit should be associated with.
    # @return [AsyncOperationResponse]
    def create(relative_path, _module, stream, profiles, opts = {})
      data, _status_code, _headers = create_with_http_info(relative_path, _module, stream, profiles, opts)
      data
    end

    # Create a modulemd defaults
    # Trigger an asynchronous task to create content,optionally create new repository version.
    # @param relative_path Path where the artifact is located relative to distributions base_path
    # @param _module Modulemd name.
    # @param stream Modulemd default stream.
    # @param profiles Default profiles for modulemd streams.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :artifact Artifact file representing the physical content
    # @option opts [File] :file An uploaded file that should be turned into the artifact of the content unit.
    # @option opts [String] :repository A URI of a repository the new content unit should be associated with.
    # @return [Array<(AsyncOperationResponse, Fixnum, Hash)>] AsyncOperationResponse data, response status code and response headers
    def create_with_http_info(relative_path, _module, stream, profiles, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ContentModulemdDefaultsApi.create ...'
      end
      # verify the required parameter 'relative_path' is set
      if @api_client.config.client_side_validation && relative_path.nil?
        fail ArgumentError, "Missing the required parameter 'relative_path' when calling ContentModulemdDefaultsApi.create"
      end
      if @api_client.config.client_side_validation && relative_path.to_s.length < 1
        fail ArgumentError, 'invalid value for "relative_path" when calling ContentModulemdDefaultsApi.create, the character length must be great than or equal to 1.'
      end

      # verify the required parameter '_module' is set
      if @api_client.config.client_side_validation && _module.nil?
        fail ArgumentError, "Missing the required parameter '_module' when calling ContentModulemdDefaultsApi.create"
      end
      if @api_client.config.client_side_validation && _module.to_s.length < 1
        fail ArgumentError, 'invalid value for "_module" when calling ContentModulemdDefaultsApi.create, the character length must be great than or equal to 1.'
      end

      # verify the required parameter 'stream' is set
      if @api_client.config.client_side_validation && stream.nil?
        fail ArgumentError, "Missing the required parameter 'stream' when calling ContentModulemdDefaultsApi.create"
      end
      if @api_client.config.client_side_validation && stream.to_s.length < 1
        fail ArgumentError, 'invalid value for "stream" when calling ContentModulemdDefaultsApi.create, the character length must be great than or equal to 1.'
      end

      # verify the required parameter 'profiles' is set
      if @api_client.config.client_side_validation && profiles.nil?
        fail ArgumentError, "Missing the required parameter 'profiles' when calling ContentModulemdDefaultsApi.create"
      end
      # resource path
      local_var_path = '/pulp/api/v3/content/rpm/modulemd_defaults/'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['multipart/form-data', 'application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}
      form_params['relative_path'] = relative_path
      form_params['module'] = _module
      form_params['stream'] = stream
      form_params['profiles'] = profiles
      form_params['artifact'] = opts[:'artifact'] if !opts[:'artifact'].nil?
      form_params['file'] = opts[:'file'] if !opts[:'file'].nil?
      form_params['repository'] = opts[:'repository'] if !opts[:'repository'].nil?

      # http body (model)
      post_body = nil
      auth_names = ['Basic']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AsyncOperationResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ContentModulemdDefaultsApi#create\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List modulemd defaultss
    # ViewSet for Modulemd.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :repository_version Repository Version referenced by HREF
    # @option opts [String] :repository_version_added Repository Version referenced by HREF
    # @option opts [String] :repository_version_removed Repository Version referenced by HREF
    # @option opts [Integer] :limit Number of results to return per page.
    # @option opts [Integer] :offset The initial index from which to return the results.
    # @option opts [String] :fields A list of fields to include in the response.
    # @option opts [String] :exclude_fields A list of fields to exclude from the response.
    # @return [InlineResponse2004]
    def list(opts = {})
      data, _status_code, _headers = list_with_http_info(opts)
      data
    end

    # List modulemd defaultss
    # ViewSet for Modulemd.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :repository_version Repository Version referenced by HREF
    # @option opts [String] :repository_version_added Repository Version referenced by HREF
    # @option opts [String] :repository_version_removed Repository Version referenced by HREF
    # @option opts [Integer] :limit Number of results to return per page.
    # @option opts [Integer] :offset The initial index from which to return the results.
    # @option opts [String] :fields A list of fields to include in the response.
    # @option opts [String] :exclude_fields A list of fields to exclude from the response.
    # @return [Array<(InlineResponse2004, Fixnum, Hash)>] InlineResponse2004 data, response status code and response headers
    def list_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ContentModulemdDefaultsApi.list ...'
      end
      # resource path
      local_var_path = '/pulp/api/v3/content/rpm/modulemd_defaults/'

      # query parameters
      query_params = {}
      query_params[:'repository_version'] = opts[:'repository_version'] if !opts[:'repository_version'].nil?
      query_params[:'repository_version_added'] = opts[:'repository_version_added'] if !opts[:'repository_version_added'].nil?
      query_params[:'repository_version_removed'] = opts[:'repository_version_removed'] if !opts[:'repository_version_removed'].nil?
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?
      query_params[:'offset'] = opts[:'offset'] if !opts[:'offset'].nil?
      query_params[:'fields'] = opts[:'fields'] if !opts[:'fields'].nil?
      query_params[:'exclude_fields'] = opts[:'exclude_fields'] if !opts[:'exclude_fields'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['Basic']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse2004')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ContentModulemdDefaultsApi#list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Inspect a modulemd defaults
    # ViewSet for Modulemd.
    # @param modulemd_defaults_href URI of Modulemd Defaults. e.g.: /pulp/api/v3/content/rpm/modulemd_defaults/1/
    # @param [Hash] opts the optional parameters
    # @option opts [String] :fields A list of fields to include in the response.
    # @option opts [String] :exclude_fields A list of fields to exclude from the response.
    # @return [RpmModulemdDefaults]
    def read(modulemd_defaults_href, opts = {})
      data, _status_code, _headers = read_with_http_info(modulemd_defaults_href, opts)
      data
    end

    # Inspect a modulemd defaults
    # ViewSet for Modulemd.
    # @param modulemd_defaults_href URI of Modulemd Defaults. e.g.: /pulp/api/v3/content/rpm/modulemd_defaults/1/
    # @param [Hash] opts the optional parameters
    # @option opts [String] :fields A list of fields to include in the response.
    # @option opts [String] :exclude_fields A list of fields to exclude from the response.
    # @return [Array<(RpmModulemdDefaults, Fixnum, Hash)>] RpmModulemdDefaults data, response status code and response headers
    def read_with_http_info(modulemd_defaults_href, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ContentModulemdDefaultsApi.read ...'
      end
      # verify the required parameter 'modulemd_defaults_href' is set
      if @api_client.config.client_side_validation && modulemd_defaults_href.nil?
        fail ArgumentError, "Missing the required parameter 'modulemd_defaults_href' when calling ContentModulemdDefaultsApi.read"
      end
      # resource path
      local_var_path = '{modulemd_defaults_href}'.sub('{' + 'modulemd_defaults_href' + '}', modulemd_defaults_href.to_s)

      # query parameters
      query_params = {}
      query_params[:'fields'] = opts[:'fields'] if !opts[:'fields'].nil?
      query_params[:'exclude_fields'] = opts[:'exclude_fields'] if !opts[:'exclude_fields'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['Basic']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'RpmModulemdDefaults')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ContentModulemdDefaultsApi#read\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
