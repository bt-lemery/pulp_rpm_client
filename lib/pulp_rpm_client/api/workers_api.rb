=begin
#Pulp 3 API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v3

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.7

=end

require 'uri'

module PulpRpmClient
  class WorkersApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # List workers
    # 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :name 
    # @option opts [String] :name__in Filter results where name is in a comma-separated list of values
    # @option opts [String] :last_heartbeat__lt Filter results where last_heartbeat is less than value
    # @option opts [String] :last_heartbeat__lte Filter results where last_heartbeat is less than or equal to value
    # @option opts [String] :last_heartbeat__gt Filter results where last_heartbeat is greater than value
    # @option opts [String] :last_heartbeat__gte Filter results where last_heartbeat is greater than or equal to value
    # @option opts [String] :last_heartbeat__range Filter results where last_heartbeat is between two comma separated values
    # @option opts [String] :online 
    # @option opts [String] :missing 
    # @option opts [String] :last_heartbeat ISO 8601 formatted dates are supported
    # @option opts [Integer] :limit Number of results to return per page.
    # @option opts [Integer] :offset The initial index from which to return the results.
    # @option opts [String] :fields A list of fields to include in the response.
    # @option opts [String] :exclude_fields A list of fields to exclude from the response.
    # @return [InlineResponse20024]
    def list(opts = {})
      data, _status_code, _headers = list_with_http_info(opts)
      data
    end

    # List workers
    # 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :name 
    # @option opts [String] :name__in Filter results where name is in a comma-separated list of values
    # @option opts [String] :last_heartbeat__lt Filter results where last_heartbeat is less than value
    # @option opts [String] :last_heartbeat__lte Filter results where last_heartbeat is less than or equal to value
    # @option opts [String] :last_heartbeat__gt Filter results where last_heartbeat is greater than value
    # @option opts [String] :last_heartbeat__gte Filter results where last_heartbeat is greater than or equal to value
    # @option opts [String] :last_heartbeat__range Filter results where last_heartbeat is between two comma separated values
    # @option opts [String] :online 
    # @option opts [String] :missing 
    # @option opts [String] :last_heartbeat ISO 8601 formatted dates are supported
    # @option opts [Integer] :limit Number of results to return per page.
    # @option opts [Integer] :offset The initial index from which to return the results.
    # @option opts [String] :fields A list of fields to include in the response.
    # @option opts [String] :exclude_fields A list of fields to exclude from the response.
    # @return [Array<(InlineResponse20024, Fixnum, Hash)>] InlineResponse20024 data, response status code and response headers
    def list_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WorkersApi.list ...'
      end
      # resource path
      local_var_path = '/pulp/api/v3/workers/'

      # query parameters
      query_params = {}
      query_params[:'name'] = opts[:'name'] if !opts[:'name'].nil?
      query_params[:'name__in'] = opts[:'name__in'] if !opts[:'name__in'].nil?
      query_params[:'last_heartbeat__lt'] = opts[:'last_heartbeat__lt'] if !opts[:'last_heartbeat__lt'].nil?
      query_params[:'last_heartbeat__lte'] = opts[:'last_heartbeat__lte'] if !opts[:'last_heartbeat__lte'].nil?
      query_params[:'last_heartbeat__gt'] = opts[:'last_heartbeat__gt'] if !opts[:'last_heartbeat__gt'].nil?
      query_params[:'last_heartbeat__gte'] = opts[:'last_heartbeat__gte'] if !opts[:'last_heartbeat__gte'].nil?
      query_params[:'last_heartbeat__range'] = opts[:'last_heartbeat__range'] if !opts[:'last_heartbeat__range'].nil?
      query_params[:'online'] = opts[:'online'] if !opts[:'online'].nil?
      query_params[:'missing'] = opts[:'missing'] if !opts[:'missing'].nil?
      query_params[:'last_heartbeat'] = opts[:'last_heartbeat'] if !opts[:'last_heartbeat'].nil?
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?
      query_params[:'offset'] = opts[:'offset'] if !opts[:'offset'].nil?
      query_params[:'fields'] = opts[:'fields'] if !opts[:'fields'].nil?
      query_params[:'exclude_fields'] = opts[:'exclude_fields'] if !opts[:'exclude_fields'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['Basic']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse20024')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WorkersApi#list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Inspect a worker
    # 
    # @param worker_href URI of Worker. e.g.: /pulp/api/v3/workers/1/
    # @param [Hash] opts the optional parameters
    # @option opts [String] :fields A list of fields to include in the response.
    # @option opts [String] :exclude_fields A list of fields to exclude from the response.
    # @return [Worker]
    def read(worker_href, opts = {})
      data, _status_code, _headers = read_with_http_info(worker_href, opts)
      data
    end

    # Inspect a worker
    # 
    # @param worker_href URI of Worker. e.g.: /pulp/api/v3/workers/1/
    # @param [Hash] opts the optional parameters
    # @option opts [String] :fields A list of fields to include in the response.
    # @option opts [String] :exclude_fields A list of fields to exclude from the response.
    # @return [Array<(Worker, Fixnum, Hash)>] Worker data, response status code and response headers
    def read_with_http_info(worker_href, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WorkersApi.read ...'
      end
      # verify the required parameter 'worker_href' is set
      if @api_client.config.client_side_validation && worker_href.nil?
        fail ArgumentError, "Missing the required parameter 'worker_href' when calling WorkersApi.read"
      end
      # resource path
      local_var_path = '{worker_href}'.sub('{' + 'worker_href' + '}', worker_href.to_s)

      # query parameters
      query_params = {}
      query_params[:'fields'] = opts[:'fields'] if !opts[:'fields'].nil?
      query_params[:'exclude_fields'] = opts[:'exclude_fields'] if !opts[:'exclude_fields'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['Basic']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Worker')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WorkersApi#read\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
