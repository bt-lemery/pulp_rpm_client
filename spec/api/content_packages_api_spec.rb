=begin
#Pulp 3 API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v3

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.7

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::ContentPackagesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ContentPackagesApi' do
  before do
    # run before each test
    @instance = SwaggerClient::ContentPackagesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ContentPackagesApi' do
    it 'should create an instance of ContentPackagesApi' do
      expect(@instance).to be_instance_of(SwaggerClient::ContentPackagesApi)
    end
  end

  # unit tests for create
  # Create a package
  # Trigger an asynchronous task to create content,optionally create new repository version.
  # @param relative_path Path where the artifact is located relative to distributions base_path
  # @param [Hash] opts the optional parameters
  # @option opts [String] :artifact Artifact file representing the physical content
  # @option opts [File] :file An uploaded file that should be turned into the artifact of the content unit.
  # @option opts [String] :repository A URI of a repository the new content unit should be associated with.
  # @return [AsyncOperationResponse]
  describe 'create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list
  # List packages
  # Define endpoint name which will appear in the API endpoint for this content type. For example::     http://pulp.example.com/pulp/api/v3/content/rpm/packages/  Also specify queryset and serializer for Package.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name Filter results where name matches value
  # @option opts [String] :name__in Filter results where name is in a comma-separated list of values
  # @option opts [String] :epoch Filter results where epoch matches value
  # @option opts [String] :epoch__in Filter results where epoch is in a comma-separated list of values
  # @option opts [String] :version Filter results where version matches value
  # @option opts [String] :version__in Filter results where version is in a comma-separated list of values
  # @option opts [String] :release Filter results where release matches value
  # @option opts [String] :release__in Filter results where release is in a comma-separated list of values
  # @option opts [String] :arch Filter results where arch matches value
  # @option opts [String] :arch__in Filter results where arch is in a comma-separated list of values
  # @option opts [String] :pkg_id Filter results where pkgId matches value
  # @option opts [String] :pkg_id__in Filter results where pkgId is in a comma-separated list of values
  # @option opts [String] :checksum_type Filter results where checksum_type matches value
  # @option opts [String] :checksum_type__in Filter results where checksum_type is in a comma-separated list of values
  # @option opts [String] :repository_version Repository Version referenced by HREF
  # @option opts [String] :repository_version_added Repository Version referenced by HREF
  # @option opts [String] :repository_version_removed Repository Version referenced by HREF
  # @option opts [Integer] :limit Number of results to return per page.
  # @option opts [Integer] :offset The initial index from which to return the results.
  # @option opts [String] :fields A list of fields to include in the response.
  # @option opts [String] :exclude_fields A list of fields to exclude from the response.
  # @return [InlineResponse20010]
  describe 'list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read
  # Inspect a package
  # Define endpoint name which will appear in the API endpoint for this content type. For example::     http://pulp.example.com/pulp/api/v3/content/rpm/packages/  Also specify queryset and serializer for Package.
  # @param package_href URI of Package. e.g.: /pulp/api/v3/content/rpm/packages/1/
  # @param [Hash] opts the optional parameters
  # @option opts [String] :fields A list of fields to include in the response.
  # @option opts [String] :exclude_fields A list of fields to exclude from the response.
  # @return [RpmPackage]
  describe 'read test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
